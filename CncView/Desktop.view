<div id="Desktop" data-tchmi-type="TcHmi.Controls.System.TcHmiView" data-tchmi-top="0" data-tchmi-left="0" data-tchmi-width-mode="Content" data-tchmi-min-width="100" data-tchmi-min-width-unit="%" data-tchmi-height-mode="Content" data-tchmi-min-height="100" data-tchmi-min-height-unit="%" data-tchmi-creator-viewport-width="1280" data-tchmi-creator-viewport-height="800">
  <div id="ViewDesktopBeckhoffLogo" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiImage" data-tchmi-src="Images/Beckhoff_Logo.svg" data-tchmi-left="20" data-tchmi-top="20" data-tchmi-width="194" data-tchmi-height="57">

  </div>
<div id="GCodeEditor" data-tchmi-type="TcHmi.Controls.TcHmiCncControls.GCodeEditor" data-tchmi-height="486" data-tchmi-height-unit="px" data-tchmi-left="321" data-tchmi-left-unit="px" data-tchmi-top="115" data-tchmi-top-unit="px" data-tchmi-width="433" data-tchmi-width-unit="px" data-tchmi-font-size="18" data-tchmi-read-only="false">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "GCodeEditor.onFileLoaded",
    "actions": [
      {
        "objectType": "ControlApiFunction",
        "active": true,
        "control": "GCodePathRenderer",
        "fn": "setPath",
        "fnParams": [
          {
            "objectType": "Symbol",
            "valueType": "tchmi:general#/definitions/String",
            "symbolExpression": "%ctrl%GCodeEditor::content%/ctrl%"
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiFileExplorer" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiFileExplorer" data-tchmi-height="486" data-tchmi-height-unit="px" data-tchmi-left="20" data-tchmi-left-unit="px" data-tchmi-top="115" data-tchmi-top-unit="px" data-tchmi-width="291" data-tchmi-width-unit="px" data-tchmi-menu-bar-height="0" data-tchmi-root="/sample_gcode">
</div>
<div id="TcHmiButton" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="30" data-tchmi-left-unit="px" data-tchmi-text="Load" data-tchmi-top="611" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">

<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiTextblock::Text%/ctrl%",
        "value": {
          "objectType": "Symbol",
          "valueType": "tchmi:general#/definitions/String",
          "symbolExpression": "%f%%ctrl%TcHmiFileExplorer::FullPath%/ctrl% + '/' + %ctrl%TcHmiFileExplorer::SelectedItems[0]%/ctrl%%/f%"
        },
        "asyncWait": true
      },
      {
        "objectType": "ControlApiFunction",
        "active": true,
        "control": "GCodeEditor",
        "fn": "loadFile",
        "fnParams": [
          {
            "objectType": "Symbol",
            "valueType": "tchmi:general#/definitions/String",
            "symbolExpression": "%ctrl%TcHmiFileExplorer::SelectedItems[0]%/ctrl%"
          },
          {
            "objectType": "Symbol",
            "valueType": "tchmi:general#/definitions/String",
            "symbolExpression": "%ctrl%TcHmiFileExplorer::FullPath%/ctrl%"
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiTextblock" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiTextblock" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="240" data-tchmi-left-unit="px" data-tchmi-text="Textblock" data-tchmi-top="611" data-tchmi-top-unit="px" data-tchmi-width="370" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">
</div>
<div id="TcHmiButton_1" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="130" data-tchmi-left-unit="px" data-tchmi-text="Save" data-tchmi-top="611" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_1.onPressed",
    "actions": [
      {
        "objectType": "ControlApiFunction",
        "active": true,
        "control": "GCodeEditor",
        "fn": "save",
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiThemeSelect" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiThemeSelect" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="691" data-tchmi-left-unit="px" data-tchmi-top="26" data-tchmi-top-unit="px" data-tchmi-width="264" data-tchmi-width-unit="px">
<script data-tchmi-target-attribute="data-tchmi-content-padding" type="application/json">
{
  "top": 3,
  "right": 3,
  "bottom": 3,
  "left": 3
}
</script>

</div>
<div id="GCodePathRenderer" data-tchmi-type="TcHmi.Controls.TcHmiCncControls.GCodePathRenderer" data-tchmi-height="486" data-tchmi-height-unit="px" data-tchmi-left="764" data-tchmi-left-unit="px" data-tchmi-top="115" data-tchmi-top-unit="px" data-tchmi-width="506" data-tchmi-width-unit="px" data-tchmi-render-progress="true" data-tchmi-selected-mesh="%ctrl%GCodeEditor::SelectedLine%/ctrl%">





<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "GCodePathRenderer.onPathSegmentPressed",
    "actions": [
      {
        "objectType": "ControlApiFunction",
        "active": true,
        "control": "GCodeEditor",
        "fn": "gotoLine",
        "fnParams": [
          {
            "objectType": "Symbol",
            "valueType": "tchmi:general#/definitions/String",
            "symbolExpression": "%ctrl%GCodePathRenderer::SelectedMeshId%/ctrl%"
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
<div id="TcHmiButton_3" data-tchmi-type="TcHmi.Controls.Beckhoff.TcHmiButton" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="654" data-tchmi-left-unit="px" data-tchmi-text="Render" data-tchmi-top="611" data-tchmi-top-unit="px" data-tchmi-width="100" data-tchmi-width-unit="px" data-tchmi-word-wrap="true">
<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_3.onPressed",
    "actions": [
      {
        "objectType": "ControlApiFunction",
        "active": true,
        "control": "GCodePathRenderer",
        "fn": "setPath",
        "fnParams": [
          {
            "objectType": "Symbol",
            "valueType": "tchmi:general#/definitions/String",
            "symbolExpression": "%ctrl%GCodeEditor::Content%/ctrl%"
          }
        ],
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>
</div>